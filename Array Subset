
class Solution {
    public boolean isSubset(int a[], int b[]) {
        Map<Integer, Integer> freqMap = new HashMap<>();

        for (int num : a) {
            freqMap.put(num, freqMap.getOrDefault(num, 0) + 1);
        }

        for (int num : b) {
            if (!freqMap.containsKey(num) || freqMap.get(num) == 0) {
                return false;
            }
            freqMap.put(num, freqMap.get(num) - 1);
        }

        return true;
    
    }
}



//Hash Set

class GfG {

    static boolean isSubset(int[] a,int[] b) {
        // Create a hash set and insert all elements of a
        Set<Integer> hashSet = new HashSet<>();
        for (int num : a) {
            hashSet.add(num);
        }

        // Check each element of b in the hash set
        for (int num : b) {
            if (!hashSet.contains(num)) {
                return false;
            }
        }

        // If all elements of b are found in the hash set
        return true;
    }
