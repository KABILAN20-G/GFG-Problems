//optimal solution using two pinter method
class Solution {
    boolean twoSum(int arr[], int target) {
       Arrays.sort(arr);
       int left=0;
       int right=arr.length-1;
       
       while(left<right)
       {
           int sum=arr[left]+arr[right];
           
           if(sum==target)
           {
               return true;
           }
           else if(sum<target)
           {
               left++;
           }
           else{
               right--;
           }
       }
       
       return false;
    }
}

//better solution using haspmap

import java.util.HashMap;

class Solution {
    boolean twoSum(int[] arr, int target) {
        HashMap<Integer, Integer> map = new HashMap<>();

        for (int i = 0; i < arr.length; i++) {
            int complement = target - arr[i];
            if (map.containsKey(complement)) {
                return true;
            }
            map.put(arr[i], i);
        }
        return false;
    }
}
